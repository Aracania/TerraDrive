% ========== SETUP ==========
u = udpport("datagram", "IPV4");

esp32IP = "192.168.4.1";   % Default ESP32 Access Point IP
esp32Port = 4210;          % You must match this port with ESP32 code
localPort = 4321;          % MATLAB's port to listen for data

configureCallback(u, "off");  % Disable any old callbacks

% Reference GPS (origin)
latRef = 7.214971;
lonRef = 124.248697;
R = 6371000;  % Earth radius in meters
lat0_rad = deg2rad(latRef);
lon0_rad = deg2rad(lonRef);

% Desired path (local x, y, z)
pointx = [3.48412, 7.00530, 10.56354, 14.08472, 17.60590, 21.12709];
pointy = [-2.63162, -5.22617, -7.85779, -10.45235, -13.08397, -15.67852];
pointz = [-36.86990, -36.57303, -36.86990, -35.70669, -36.86990, -36.57303];

% Interpolant
F = scatteredInterpolant(pointx', pointy', pointz', 'linear', 'nearest');

% Load fuzzy system
fis = readfis('sugenotype1.fis');

% ========== MAIN LOOP ==========
for i = 1:length(pointx)

    fprintf("Waiting for GPS from ESP32...\n");

    % Wait for data from ESP32
    gpsData = read(u, 1, "string", "Timeout", 5);

    if isempty(gpsData)
        warning("No data received. Skipping...");
        continue;
    end

    gpsLine = gpsData.Data;  % e.g., "7.215012,124.248900"
    gpsParts = strsplit(strtrim(gpsLine), ",");

    if length(gpsParts) ~= 2
        warning("Malformed data: %s", gpsLine);
        continue;
    end

    currentLat = str2double(gpsParts{1});
    currentLon = str2double(gpsParts{2});

    % Convert to local coordinates
    clat_rad = deg2rad(currentLat);
    clon_rad = deg2rad(currentLon);

    currentx = R * (clon_rad - lon0_rad) * cos(lat0_rad);
    currenty = R * (clat_rad - lat0_rad);
    currentz = F(currentx, currenty);

    fuzzyInput = [currentx, currenty, currentz];
    output = evalfis(fis, fuzzyInput);  % [leftPWM, rightPWM]

    % Send back control to ESP32
    controlMsg = sprintf('%.2f,%.2f', output(1), output(2));
    write(u, controlMsg, "string", esp32IP, esp32Port);

    fprintf("Sent to ESP32: %s\n", controlMsg);
    pause(1);  % optional delay
end

% ========== CLEANUP ==========
clear u;
disp("Finished and closed UDP port.");
